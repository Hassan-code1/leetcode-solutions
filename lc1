//two Sum
//brute force
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n = nums.size(); 
        int left = 0;
        int right = 0;
        int flag =0;
        for(int i = 0; i < n; i++){
            for(int j = i+1; j < n; j++){
                if(nums[i]+nums[j] == target){
                    left = i;
                    right = j;
                    flag = 1;
                    break;
                }
            }
            if(flag) break;
        }
        vector<int> res;
        res.push_back(left);
        res.push_back(right);
        return res;
    }
};

//optimal
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n = nums.size();
        unordered_map<int,int> mp;
        for(int i=0;i<n;i++){
            int other = target-nums[i];
            if(mp.find(other) != mp.end()){
                return {i,mp[other]};
            }
            mp[nums[i]] = i;
        }
        return {};
    }
};
